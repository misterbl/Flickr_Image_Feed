// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    fetchingFlickrFeed={false}
    flickrFeedItems={
      Array [
        Object {
          "media": Object {
            "author": "authorTest",
            "author_id": "123",
            "description": "descriptionTest",
            "link": "linkTest",
            "m": "mediaTest",
            "tags": "tagsTest",
            "title": "titleTest",
          },
        },
      ]
    }
    getflickrFeed={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    getflickrFeedByTags={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Connect(Header) />,
        false,
        <div
          className="flex flex-wrap ma3"
        >
          <FlickrCard
            image="mediaTest"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FlickrCard
              image="mediaTest"
            />,
          ],
          "className": "flex flex-wrap ma3",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "NaNmediaTest",
            "nodeType": "function",
            "props": Object {
              "author": undefined,
              "author_id": undefined,
              "description": undefined,
              "image": "mediaTest",
              "link": undefined,
              "tags": undefined,
              "title": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Connect(Header) />,
          false,
          <div
            className="flex flex-wrap ma3"
          >
            <FlickrCard
              image="mediaTest"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FlickrCard
                image="mediaTest"
              />,
            ],
            "className": "flex flex-wrap ma3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "NaNmediaTest",
              "nodeType": "function",
              "props": Object {
                "author": undefined,
                "author_id": undefined,
                "description": undefined,
                "image": "mediaTest",
                "link": undefined,
                "tags": undefined,
                "title": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
