// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Forum matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Forum
    forumData={
      Object {
        "items": Array [
          Object {
            "author": "authorTest",
            "author_id": "123",
            "description": "descriptionTest",
            "link": "linkTest",
            "title": "titleTest",
          },
        ],
        "title": "Flickr forum",
      }
    }
    getForumFeed={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h1
          className="tc"
        >
          Flickr forum
        </h1>,
        <div
          className="ml6"
        >
          <ForumCard
            author="authorTest"
            author_id="123"
            description="descriptionTest"
            link="linkTest"
            title="titleTest"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Flickr forum",
          "className": "tc",
        },
        "ref": null,
        "rendered": "Flickr forum",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ForumCard
              author="authorTest"
              author_id="123"
              description="descriptionTest"
              link="linkTest"
              title="titleTest"
            />,
          ],
          "className": "ml6",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "titleTestundefined",
            "nodeType": "function",
            "props": Object {
              "author": "authorTest",
              "author_id": "123",
              "description": "descriptionTest",
              "link": "linkTest",
              "title": "titleTest",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h1
            className="tc"
          >
            Flickr forum
          </h1>,
          <div
            className="ml6"
          >
            <ForumCard
              author="authorTest"
              author_id="123"
              description="descriptionTest"
              link="linkTest"
              title="titleTest"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Flickr forum",
            "className": "tc",
          },
          "ref": null,
          "rendered": "Flickr forum",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ForumCard
                author="authorTest"
                author_id="123"
                description="descriptionTest"
                link="linkTest"
                title="titleTest"
              />,
            ],
            "className": "ml6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "titleTestundefined",
              "nodeType": "function",
              "props": Object {
                "author": "authorTest",
                "author_id": "123",
                "description": "descriptionTest",
                "link": "linkTest",
                "title": "titleTest",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
