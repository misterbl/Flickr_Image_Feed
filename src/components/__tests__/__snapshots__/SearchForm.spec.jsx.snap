// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchForm matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    dirty={false}
    errors={Object {}}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleReset={[Function]}
    handleSubmit={[Function]}
    isSubmitting={false}
    isValid={false}
    isValidating={false}
    registerField={[Function]}
    resetForm={[Function]}
    setError={[Function]}
    setErrors={[Function]}
    setFieldError={[Function]}
    setFieldTouched={[Function]}
    setFieldValue={[Function]}
    setFormikState={[Function]}
    setStatus={[Function]}
    setSubmitting={[Function]}
    setTouched={[Function]}
    setValues={[Function]}
    submitCount={0}
    submitForm={[Function]}
    touched={Object {}}
    unregisterField={[Function]}
    validateField={[Function]}
    validateForm={[Function]}
    values={
      Object {
        "searchByTags": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="absolute bn bg-transparent"
          disabled={true}
          id="next-button"
          type="submit"
        >
          <img
            alt="search icon"
            className="mt1"
            src="search.svg"
          />
        </button>,
        <label
          className="font-weight-bold d-flex justify-content-between"
          htmlFor="buildingUnit"
        />,
        <input
          className="pl4 bn h2"
          id="searchByTags"
          name="searchByTags"
          onChange={[Function]}
          placeholder="search by tags"
          type="text"
          value=""
        />,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="search icon"
            className="mt1"
            src="search.svg"
          />,
          "className": "absolute bn bg-transparent",
          "disabled": true,
          "id": "next-button",
          "type": "submit",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "search icon",
            "className": "mt1",
            "src": "search.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "font-weight-bold d-flex justify-content-between",
          "htmlFor": "buildingUnit",
        },
        "ref": null,
        "rendered": null,
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "pl4 bn h2",
          "id": "searchByTags",
          "name": "searchByTags",
          "onChange": [Function],
          "placeholder": "search by tags",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="absolute bn bg-transparent"
            disabled={true}
            id="next-button"
            type="submit"
          >
            <img
              alt="search icon"
              className="mt1"
              src="search.svg"
            />
          </button>,
          <label
            className="font-weight-bold d-flex justify-content-between"
            htmlFor="buildingUnit"
          />,
          <input
            className="pl4 bn h2"
            id="searchByTags"
            name="searchByTags"
            onChange={[Function]}
            placeholder="search by tags"
            type="text"
            value=""
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="search icon"
              className="mt1"
              src="search.svg"
            />,
            "className": "absolute bn bg-transparent",
            "disabled": true,
            "id": "next-button",
            "type": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "search icon",
              "className": "mt1",
              "src": "search.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "font-weight-bold d-flex justify-content-between",
            "htmlFor": "buildingUnit",
          },
          "ref": null,
          "rendered": null,
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "pl4 bn h2",
            "id": "searchByTags",
            "name": "searchByTags",
            "onChange": [Function],
            "placeholder": "search by tags",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
